{"version":3,"sources":["api/index.js","components/Lists.js/Lists.js","components/Chart.js/Chart.js","components/SelectCountry.js/SelectCountry.js","App.js","index.js"],"names":["url","fetchData","country","a","queryUrl","axios","get","data","Error","fetchDailyData","fetchCountryData","countries","Lists","confirmed","recovered","deaths","lastUpdate","className","value","Date","toDateString","Chart","useState","setData","chart","setChart","useEffect","fetchedData","pieChart","labels","datasets","backgroundColor","borderColor","borderWidth","width","height","options","title","display","text","dailyChart","length","map","reportDate","total","label","fill","barChart","legend","onChange","e","target","console","log","SelectCountry","handleChange","countryData","setCountryData","idx","key","name","App","setCountry","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.814863c1.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n    let queryUrl = url;\r\n\r\n    if(country) {\r\n        queryUrl = `${url}/countries/${country}`;\r\n    }\r\n\r\n    try {\r\n        const {data} = await axios.get(queryUrl);\r\n\r\n        return data;\r\n    } catch(err) {\r\n        throw Error(err);\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const {data} = await axios.get(`${url}/daily`);\r\n\r\n        return data;\r\n    } catch(err) {\r\n        throw Error(err);\r\n    }\r\n}\r\n\r\nexport const fetchCountryData = async () => {\r\n    try {\r\n        const {data: {countries}} = await axios.get(`${url}/countries`);\r\n\r\n        return countries;\r\n    } catch(err) {\r\n        throw Error(err);\r\n    }\r\n}","import React from 'react';\r\n\r\nimport './Lists.css';\r\n\r\nexport default function Lists({data: {confirmed, recovered, deaths, lastUpdate}}) {\r\n\r\n    if(!lastUpdate) {\r\n        return 'loading...';\r\n    }\r\n\r\n    return (\r\n        <div className = 'lists'>\r\n            <div className=\"lists__item byellow\">\r\n                <h3>Confirmed</h3>\r\n                <h2>{confirmed.value} </h2>\r\n                <h3>Active cases of COVID-19</h3>\r\n                <p>Last Update: {new Date(lastUpdate).toDateString()}. </p>\r\n            </div>\r\n            <div className=\"lists__item bgreen\">\r\n                <h3>Recovered</h3>\r\n                <h2>{recovered.value} </h2>\r\n                <h3>Recovered cases of COVID-19</h3>\r\n                <p>Last Update: {new Date(lastUpdate).toDateString()}. </p>\r\n            </div>\r\n            <div className=\"lists__item bred\">\r\n                <h3>Deaths</h3>\r\n                <h2>{deaths.value} </h2>\r\n                <h3>People who died due to COVID-19</h3>\r\n                <p>Last Update: {new Date(lastUpdate).toDateString()}. </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\n\r\nimport {fetchDailyData} from '../../api';\r\nimport {Bar, Line, Doughnut, Pie} from 'react-chartjs-2';\r\n\r\nimport './Chart.css';\r\n\r\nexport default function Chart({data: {confirmed, recovered, deaths}, country}) {\r\n\r\n    \r\n\r\n    const [data, setData] = useState([]);\r\n    const [chart, setChart] = useState('pieChart');\r\n\r\n    useEffect(() => {\r\n        const fetchedData = async () => {\r\n            setData(await fetchDailyData());\r\n        }\r\n        \r\n        fetchedData();\r\n        \r\n    }, []);\r\n\r\n    \r\n\r\n    const handleChange = (e) => {\r\n        setChart(e.target.value);\r\n        console.log(e.target.value)\r\n    }\r\n\r\n    const pieChart = (\r\n        confirmed ?\r\n        <Pie \r\n            data = {{\r\n                labels: [\r\n                    'confirmed',\r\n                    'recovered',\r\n                    'deaths',\r\n                ],\r\n                datasets : [{\r\n                    data: [confirmed.value, recovered.value, deaths.value],\r\n                    backgroundColor: ['#FFF851', '#5BFF62', '#EE3D48'],\r\n                    borderColor: '#000',\r\n                    borderWidth: '1px',\r\n                }],   \r\n            }}\r\n            width = {80}\r\n            height = {60}\r\n            options = {{\r\n                title: {\r\n                    display: true,\r\n                    text: `Current state in ${country ? country : 'the world'}`\r\n                },\r\n            }}\r\n        /> : null\r\n\r\n    );\r\n    const dailyChart = (\r\n        data.length ? \r\n        <Line \r\n            data = {{\r\n                labels: data.map(({reportDate}) => reportDate),\r\n                datasets: [{\r\n                    data: data.map(({confirmed}) => confirmed.total),\r\n                    label: 'Confirmed',\r\n                    borderColor: '#FFF851',\r\n                    fill: true\r\n                },\r\n                {\r\n                    data: data.map(({deaths}) => deaths.total),\r\n                    label: 'Deaths',\r\n                    borderColor: '#EE3D48',\r\n                    backgroundColor: 'rgba(238, 61, 72, .5)',\r\n                    fill: true\r\n                }]\r\n            }}\r\n            width = {80}\r\n            height = {70}\r\n            options = {{\r\n                title: {\r\n                    display: true,\r\n                    text: `Current state in the world`\r\n                },\r\n            }}\r\n        /> : null\r\n    )\r\n\r\n    const barChart = (\r\n        confirmed ? \r\n        <Bar \r\n            data = {{\r\n                labels: ['Confirmed', 'Recovered', 'Deaths'],\r\n                datasets: [{\r\n                    label: 'People',\r\n                    backgroundColor: ['rgba(255, 248, 81, .7)', 'rgba(91, 255, 98, .7)', 'rgba(238, 61, 72, .7)'],\r\n                    data: [confirmed.value, recovered.value, deaths.value],\r\n                }]\r\n            }}\r\n            options = {{\r\n                legend: {display: false},\r\n                title: {display: true, text: `Current state in ${country ? country : 'the world'}`}\r\n            }}\r\n        /> : null\r\n    )\r\n\r\n\r\n    return (\r\n        <div className = 'chart'>\r\n            {chart === 'pieChart' ? pieChart : null}\r\n            {chart === 'dailyChart' ? country ? pieChart : dailyChart : null}\r\n            {chart === 'barChart' ? barChart : null}\r\n            <select onChange={handleChange}>\r\n                <option value='pieChart'>Pie chart</option>\r\n                {country ? null : <option value=\"dailyChart\">Daily data for global</option>}\r\n                <option value=\"barChart\">Bar chart</option>\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport {fetchCountryData} from '../../api';\r\n\r\nimport './SelectCountry.css';\r\n\r\nexport default function SelectCountry({handleChange}) {\r\n\r\n    const [countryData, setCountryData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            setCountryData(await fetchCountryData());\r\n        }\r\n        fetchData();\r\n    }, [setCountryData]);\r\n\r\n    return (\r\n        <div className='selectCountry'>\r\n            <select onChange={(e) => handleChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                {countryData.map((country, idx) => (\r\n                    <option key = {idx} value = {country.name}>{country.name} </option>\r\n                ))}\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react';\n\nimport {fetchData, fetchDailyData} from './api';\nimport Lists from './components/Lists.js/Lists';\nimport Chart from './components/Chart.js/Chart';\nimport SelectCountry from './components/SelectCountry.js/SelectCountry';\n\nimport './App.css';\n\nfunction App() {\n\n  const [data, setData] = useState({});\n  const [country, setCountry] = useState('');\n\n  useEffect(() => {\n\n    const fetchedData = async () => {\n      setData(await fetchData());\n    }\n\n    fetchedData();\n\n  }, []);\n\n  const handleChange = async (country) => {\n    setData(await fetchData(country));\n    setCountry(country);\n  }\n\n\n  return (\n    <div className=\"App\">\n      <h1 className='App__title'>COVID-19 TRACKER</h1>\n      <div className=\"section\">\n        <SelectCountry handleChange = {handleChange} />\n        <Chart data = {data} country = {country} />\n        <Lists data = {data} />\n      </div>\n      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}